# Functions

# Usage: compresspdf [input file] [output file] [screen*|ebook*|printer|prepress]
compresspdf() {
    \gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dPDFSETTINGS=/${3:-"ebook"} \
        -dCompatibilityLevel=1.4 -sOutputFile="$2" "$1"
}

# Open the detached session or start a new one
tmux() {
    if [[ -n "$@" ]]; then
        command tmux "$@"
        return
    fi

    if [[ "$TERM" != "screen" ]] && 
        [[ "$SSH_CONNECTION" == "" ]] &&
        [[ -z "$TMUX" ]]; then
    # Attempt to discover a detached session and attach 
    # it, else create a new session
        SESSION_NAME=base
        command tmux new -A -s $SESSION_NAME
    fi
}

# Find in current directory shortcut
f() {
    find . -iname "*${1}*"
}

# Shortcut for opening a file or the current directory in macOS Finder
o() {
    open ${1:-"."}
}

# Get statistics on most commonly used commands
history_stats() {
    fc -l 1 | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " \
        CMD[a]/count*100 "% " a;}' | grep -v "./" | \
        column -c3 -s " " -t | sort -nr | nl |  head -n20
}

# Web searching from the command line, taken from oh-my-zsh
function web_search() {
    emulate -L zsh

    # define search engine URLs
    typeset -A urls
    urls=(
        google      "https://www.google.com/search?q="
        bing        "https://www.bing.com/search?q="
        yahoo       "https://search.yahoo.com/search?p="
        duckduckgo  "https://www.duckduckgo.com/?q="
        startpage   "https://www.startpage.com/do/search?q="
        yandex      "https://yandex.ru/yandsearch?text="
        github      "https://github.com/search?q="
        baidu       "https://www.baidu.com/s?wd="
        ecosia      "https://www.ecosia.org/search?q="
        goodreads   "https://www.goodreads.com/search?q="
    )

    # check whether the search engine is supported
    if [[ -z "$urls[$1]" ]]; then
        echo "Search engine $1 not supported."
        return 1
    fi

    # search or go to main page depending on number of arguments passed
    if [[ $# -gt 1 ]]; then
        # build search url:
        # join arguments passed with '+', then append to search engine URL
        url="${urls[$1]}${(j:+:)@[2,-1]}"
    else
        # build main page url:
        # split by '/', then rejoin protocol (1) and domain (2) parts with '//'
        url="${(j://:)${(s:/:)urls[$1]}[1,2]}"
    fi

    # for macOS
    open "$url"
}
